plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.walkingpark"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // Dagger-Hilt 와 Room 을 함께 사용하기 위함
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
        buildConfigField "String", "PUBLIC_API_KEY", properties['public_api_key']
        buildConfigField "String", "GOOGLE_API_KEY", properties['google_api_key']
        manifestPlaceholders["PUBLIC_API_KEY"] = "public_api_key"
        manifestPlaceholders["GOOGLE_API_KEY"] = "google_api_key"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-kapt'
}

dependencies {

    implementation 'com.google.android.gms:play-services-location:19.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation files('libs/TransCoord.jar')
    def lifecycle_version = "2.4.1"
    def arch_version = "2.1.0"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // retrofit2
    implementation('com.squareup.retrofit2:retrofit:2.9.0') {
        exclude module: 'okhttp'
    }
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    // for curl(KaKao Api) & gson & okhttp3 & intercepter
    implementation 'com.squareup.retrofit2:converter-scalars:2.6.4'
    implementation 'com.google.code.gson:gson:2.9.0'                 // Gson 사용시
    implementation 'com.squareup.okhttp3:okhttp:4.9.2'                     //okhttp3
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'

    // viewPager2
    implementation("androidx.viewpager2:viewpager2:1.0.0")
    // circleIndicator
    implementation 'me.relex:circleindicator:2.1.6'

    // fragment-KTX : 프래그먼트 트랜젝션 단순화
    implementation("androidx.fragment:fragment-ktx:1.4.1")

    // tabLayout
    implementation "com.google.android.material:material:1.7.0-alpha02"
    // ---------------------------------------------------------------------------------------------
    // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    // ViewModel utilities for Compose
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version")
    // LiveData
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    // Lifecycles only (without ViewModel or LiveData)
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")

    // Saved state module for ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")

    // Annotation processor
    kapt("androidx.lifecycle:lifecycle-compiler:$lifecycle_version")
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation("androidx.lifecycle:lifecycle-service:$lifecycle_version")

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation("androidx.lifecycle:lifecycle-process:$lifecycle_version")

    // optional - ReactiveStreams support for LiveData
    implementation("androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version")

    // optional - Test helpers for LiveData
    testImplementation("androidx.arch.core:core-testing:$arch_version")

    // 알람 관련
    implementation 'androidx.work:work-runtime-ktx:2.7.1'

    // Android Glide Library
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // 코루틴
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0")

    // Google Maps Api
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    // Utilities for Maps SDK for Android (requires Google Play Services)
    implementation 'com.google.maps.android:android-maps-utils:2.3.0'

    // room
    def roomVersion = "2.4.2"
    implementation("androidx.room:room-runtime:$roomVersion")
    annotationProcessor("androidx.room:room-compiler:$roomVersion")
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$roomVersion")
    kapt 'android.arch.persistence.room:compiler:1.1.1'
    kapt "androidx.room:room-compiler:2.4.2"

    // dagger-hilt
    implementation("com.google.dagger:hilt-android:2.38.1")
    kapt("com.google.dagger:hilt-android-compiler:2.38.1")

    // reactiveX
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'

    def paging_version = "3.1.1"

    implementation("androidx.paging:paging-runtime:$paging_version")

    // alternatively - without Android dependencies for tests
    testImplementation("androidx.paging:paging-common:$paging_version")

    // optional - RxJava2 support
    implementation("androidx.paging:paging-rxjava2:$paging_version")

    // optional - RxJava3 support
    implementation("androidx.paging:paging-rxjava3:$paging_version")

    // optional - Guava ListenableFuture support
    implementation("androidx.paging:paging-guava:$paging_version")

    // optional - Jetpack Compose integration
    implementation("androidx.paging:paging-compose:1.0.0-alpha14")

    // room- rxjava
    implementation "androidx.room:room-rxjava2:2.4.2"
    implementation "androidx.room:room-runtime:2.5.0-alpha01"
    annotationProcessor "androidx.room:room-compiler:2.5.0-alpha01"

    // optional - RxJava support for Room
    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // MpAndroidChart
    //implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    //noinspection GradleDependency
    // implementation 'com.jjoe64:graphview:4.2.2'
    //def paging_version = "3.1.1"
    //implementation("androidx.paging:paging-runtime-ktx:$paging_version")
    // optional - Jetpack Compose integration
    // implementation("androidx.paging:paging-compose:1.0.0-alpha14")
}
kapt {
    correctErrorTypes = true
}